{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROGRAMMING\\\\REACT\\\\product-page-reactjs\\\\src\\\\Components\\\\ProductDetails\\\\ProductDetailsComp.js\";\nimport React from \"react\";\nimport classes from \"./ProductDetails.module.css\"; // import ProductData from \"./ProductData\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductDetailsComp = props => {\n  // Inside our data up we have color property that is passed as an array..so we can get the data by\n  const colorOptions = props.data.colorOptions.map((item, pos) => {\n    // We will declare a new variable that carries custom css for the product image\n    const classArr = [classes.ProductImage]; // The new variable classArr is appended when the key value is pos=== 0 .\n\n    if (pos === props.currentImagePosition) {\n      classArr.push(classes.SelectedProductImage);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: classArr.join(\" \"),\n      src: item.imageUrl,\n      alt: item.styleName,\n      onClick: () => props.onColorOptionClick(pos) //We create an anonymous function on the onclick method so it doesn't trigger the method outomatically\n\n    }, pos, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  });\n  const featureList = props.data.featureList.map((item, pos) => {\n    const classArr = [classes.FeatureItem]; // If pos is the first element\n\n    if (pos === props.currentFeaturedList) {\n      classArr.push(classes.SelectedFeatureItem);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classArr.join(\" \"),\n      onclick: props.onFeaturedListClick,\n      children: item\n    }, pos, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  });\n  return (\n    /*#__PURE__*/\n\n    /* CREATE A NEW Column THAT WILL HOLD THE PRODUCT DESCRIPTION */\n    // We will use the props to call the data prop passed from the appjs inside the productDetails tag - passing data from parent component to child component\n    _jsxDEV(\"div\", {\n      className: classes.ProductData,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.ProductDescription,\n        children: props.data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.SectionHeading,\n        children: \"Select Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: colorOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.SectionHeading,\n        children: \"Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: featureList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.PrimaryButton,\n        children: \"Buy Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n    /* END OF PRODUCT DESCRIPTION */\n\n  );\n};\n\n_c = ProductDetailsComp;\nexport default ProductDetailsComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetailsComp\");","map":{"version":3,"sources":["D:/PROGRAMMING/REACT/product-page-reactjs/src/Components/ProductDetails/ProductDetailsComp.js"],"names":["React","classes","ProductDetailsComp","props","colorOptions","data","map","item","pos","classArr","ProductImage","currentImagePosition","push","SelectedProductImage","join","imageUrl","styleName","onColorOptionClick","featureList","FeatureItem","currentFeaturedList","SelectedFeatureItem","onFeaturedListClick","ProductData","title","ProductDescription","description","SectionHeading","PrimaryButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CACA;;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC;AAEA,QAAMC,YAAY,GAAGD,KAAK,CAACE,IAAN,CAAWD,YAAX,CAAwBE,GAAxB,CAA4B,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC9D;AACA,UAAMC,QAAQ,GAAG,CAACR,OAAO,CAACS,YAAT,CAAjB,CAF8D,CAG9D;;AACA,QAAIF,GAAG,KAAKL,KAAK,CAACQ,oBAAlB,EAAwC;AACtCF,MAAAA,QAAQ,CAACG,IAAT,CAAcX,OAAO,CAACY,oBAAtB;AACD;;AAED,wBACE;AAEE,MAAA,SAAS,EAAEJ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAFb;AAGE,MAAA,GAAG,EAAEP,IAAI,CAACQ,QAHZ;AAIE,MAAA,GAAG,EAAER,IAAI,CAACS,SAJZ;AAKE,MAAA,OAAO,EAAE,MAAMb,KAAK,CAACc,kBAAN,CAAyBT,GAAzB,CALjB,CAKgD;;AALhD,OACOA,GADP;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAjBoB,CAArB;AAmBA,QAAMU,WAAW,GAAGf,KAAK,CAACE,IAAN,CAAWa,WAAX,CAAuBZ,GAAvB,CAA2B,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5D,UAAMC,QAAQ,GAAG,CAACR,OAAO,CAACkB,WAAT,CAAjB,CAD4D,CAE5D;;AACA,QAAIX,GAAG,KAAKL,KAAK,CAACiB,mBAAlB,EAAuC;AACrCX,MAAAA,QAAQ,CAACG,IAAT,CAAcX,OAAO,CAACoB,mBAAtB;AACD;;AACD,wBACE;AAEE,MAAA,SAAS,EAAEZ,QAAQ,CAACK,IAAT,CAAc,GAAd,CAFb;AAGE,MAAA,OAAO,EAAEX,KAAK,CAACmB,mBAHjB;AAAA,gBAKGf;AALH,OACOC,GADP;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAfmB,CAApB;AAgBA;AAAA;;AACE;AACA;AAEA;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACsB,WAAxB;AAAA,8BACE;AAAA,kBAAKpB,KAAK,CAACE,IAAN,CAAWmB;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAEvB,OAAO,CAACwB,kBAAtB;AAAA,kBAA2CtB,KAAK,CAACE,IAAN,CAAWqB;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAI,QAAA,SAAS,EAAEzB,OAAO,CAAC0B,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAOE;AAAA,kBAGGvB;AAHH;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE;AAAI,QAAA,SAAS,EAAEH,OAAO,CAAC0B,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAiBE;AAAA,kBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,cAjBF,eAmBE;AAAQ,QAAA,SAAS,EAAEjB,OAAO,CAAC2B,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;;AA1BF;AA4BD,CAlED;;KAAM1B,kB;AAoEN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./ProductDetails.module.css\";\r\n// import ProductData from \"./ProductData\";\r\n\r\nconst ProductDetailsComp = (props) => {\r\n  // Inside our data up we have color property that is passed as an array..so we can get the data by\r\n\r\n  const colorOptions = props.data.colorOptions.map((item, pos) => {\r\n    // We will declare a new variable that carries custom css for the product image\r\n    const classArr = [classes.ProductImage];\r\n    // The new variable classArr is appended when the key value is pos=== 0 .\r\n    if (pos === props.currentImagePosition) {\r\n      classArr.push(classes.SelectedProductImage);\r\n    }\r\n\r\n    return (\r\n      <img\r\n        key={pos}\r\n        className={classArr.join(\" \")}\r\n        src={item.imageUrl}\r\n        alt={item.styleName}\r\n        onClick={() => props.onColorOptionClick(pos)} //We create an anonymous function on the onclick method so it doesn't trigger the method outomatically\r\n      />\r\n    );\r\n  });\r\n\r\n  const featureList = props.data.featureList.map((item, pos) => {\r\n    const classArr = [classes.FeatureItem];\r\n    // If pos is the first element\r\n    if (pos === props.currentFeaturedList) {\r\n      classArr.push(classes.SelectedFeatureItem);\r\n    }\r\n    return (\r\n      <button\r\n        key={pos}\r\n        className={classArr.join(\" \")}\r\n        onclick={props.onFeaturedListClick}\r\n      >\r\n        {item}\r\n      </button>\r\n    );\r\n  });\r\n  return (\r\n    /* CREATE A NEW Column THAT WILL HOLD THE PRODUCT DESCRIPTION */\r\n    // We will use the props to call the data prop passed from the appjs inside the productDetails tag - passing data from parent component to child component\r\n\r\n    <div className={classes.ProductData}>\r\n      <h1>{props.data.title}</h1>\r\n      <p className={classes.ProductDescription}>{props.data.description}</p>\r\n\r\n      {/* COlor section */}\r\n      <h3 className={classes.SectionHeading}>Select Color</h3>\r\n      {/* Color image wrapper */}\r\n      <div>\r\n        {/* To add another class in our element image we have to put the classes in an array and use the join() method to convert them to string  */}\r\n        {/* Calling the spitted data from the array */}\r\n        {colorOptions}\r\n      </div>\r\n      {/* End of color image wrapper */}\r\n\r\n      {/* Features */}\r\n      <h3 className={classes.SectionHeading}>Features</h3>\r\n\r\n      <div>{featureList}</div>\r\n\r\n      <button className={classes.PrimaryButton}>Buy Now</button>\r\n      {/* End of features */}\r\n    </div>\r\n    /* END OF PRODUCT DESCRIPTION */\r\n  );\r\n};\r\n\r\nexport default ProductDetailsComp;\r\n"]},"metadata":{},"sourceType":"module"}